var searchIndex = JSON.parse('{\
"tag_game":{"doc":"Examples","t":[8,3,16,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Agent","Simulation","State","World","World","add_agent","agents","agents_mut","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","on_creation","on_creation","on_update","on_update","try_from","try_into","type_id","update","update","update","world","world_mut"],"q":["tag_game","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The agent used in the simulation.","Adds and removes <code>Agent</code>s, and updates the them based on …","The state associated with the agent","","The state of the world, provided by the simulation","Add a new agent to the simulation.","Returns a slice over all agents added to the simulation.","Returns a mutable iterator over all agents added to the …","","","","","","","","","Creates a simulation, where different agents can be …","Called when an agent is added to the simulation.","Called when an agent is added to the simulation.","Called when the simulation is updated.","Called when the simulation is updated.","","","","Calls <code>Agent::on_update</code> for every registered agent.","","","Get a reference to the simulation’s world.","Get a mutable reference to the simulation’s world."],"i":[0,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,2,2,2,2,3,3,2,2],"f":[null,null,null,null,null,[[],["usize",15]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Agent"],[3,"Simulation"],[8,"World"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};